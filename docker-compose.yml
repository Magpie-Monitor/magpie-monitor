services:
  client:
    container_name: magpie-monitor-client
    build:
      context: ./client
      dockerfile: Dockerfile
      target: production
      args:
        - VITE_GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
        - VITE_GOOGLE_REDIRECT_URI=${GOOGLE_REDIRECT_URI}
        - VITE_BACKEND_URL=${VITE_BACKEND_URL}
    ports:
      - "80:80"
  reports-service:
    user: "0"
    container_name: magpie-monitor-reports-service
    build:
      context: ./go
      dockerfile: ./docker/reports/Dockerfile
    ports:
      - ${REPORTS_SERVICE_HTTP_PORT}:${REPORTS_SERVICE_HTTP_PORT}
    develop:
      watch:
        - action: rebuild
          path: ./go/services/reports
          target: /src
        - action: rebuild
          path: ./go/pkg
          target: /src
    volumes:
      - es-certs:/usr/local/share
    healthcheck:
      test: curl --fail http://localhost:8080 || exit 1
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      - REPORTSDB_USER=${REPORTSDB_USER}
      - REPORTSDB_PASSWORD=${REPORTSDB_PASSWORD}
      - REPORTSDB_HOST=${REPORTSDB_HOST}
      - REPORTSDB_PORT=${REPORTSDB_PORT}
      - REPORTS_SERVICE_HTTP_PORT=${REPORTS_SERVICE_HTTP_PORT}
      - LOGSDB_PORT=${LOGSDB_PORT}
      - LOGSDB_HOST=${LOGSDB_HOST}
      - LOGSDB_USER=${LOGSDB_USER}
      - LOGSDB_PASSWORD=${LOGSDB_PASSWORD}
      - LOGSDB_CERT_PATH=${LOGSDB_CERT_PATH}
  logs-ingestion-service:
    user: "0"
    container_name: magpie-monitor-logs-ingestion-service
    build:
      context: ./go
      dockerfile: ./docker/logs-ingestion/Dockerfile
    ports:
      - ${LOGS_INGESTION_SERVICE_HTTP_PORT}:${LOGS_INGESTION_SERVICE_HTTP_PORT}
    environment:
      - LOGS_INGESTION_SERVICE_HTTP_PORT=${LOGS_INGESTION_SERVICE_HTTP_PORT}
      - LOGSDB_PORT=${LOGSDB_PORT}
      - LOGSDB_HOST=${LOGSDB_HOST}
      - LOGSDB_USER=${LOGSDB_USER}
      - LOGSDB_PASSWORD=${LOGSDB_PASSWORD}
      - LOGSDB_CERT_PATH=${LOGSDB_CERT_PATH}
    develop:
      watch:
        - action: rebuild
          path: ./go/services/logs-ingestion
          target: /src
        - action: rebuild
          path: ./go/pkg
          target: /src
    volumes:
      - es-certs:/usr/local/share
    healthcheck:
      test: curl --fail http://localhost:8080 || exit 1
      interval: 10s
      timeout: 5s
      retries: 5

  kafka:
    image: apache/kafka:3.8.0
    ports:
      - "9092:9092"

  mongodb:
    container_name: magpie-monitor-mongodb
    image: mongo
    volumes:
      - db-data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${REPORTSDB_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${REPORTSDB_PASSWORD}
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 5
  mongo-express:
    container_name: magpie-monitor-mongo-express
    image: mongo-express
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_SERVER: ${REPORTSDB_HOST}
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${REPORTSDB_USER}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${REPORTSDB_PASSWORD}
    depends_on:
      - mongodb

volumes:
  db-data:
  es-certs:
    external: true

networks:
  default:
    name: magpie-network
    external: true
