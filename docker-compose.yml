services:
  client:
    container_name: magpie-monitor-client
    build:
      context: ./client
      dockerfile: Dockerfile
      target: production
      args:
        - VITE_GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
        - VITE_GOOGLE_REDIRECT_URI=${GOOGLE_REDIRECT_URI}
        - VITE_BACKEND_URL=${VITE_BACKEND_URL}
    ports:
      - "80:80"
  reports-service:
    container_name: magpie-monitor-reports-service
    build:
      context: ./reports-service
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    develop:
      watch:
        - action: rebuild
          path: ./reports-service
          target: /src
    healthcheck:
      test: curl --fail http://localhost:8080 || exit 1
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      - MONGO_USER=${MONGO_USER}
      - MONGO_PASSWORD=${MONGO_PASSWORD}
      - MONGO_HOST=${MONGO_HOST}
      - MONGO_PORT=${MONGO_PORT}
      - MONGO_DB=${MONGO_DB}
      - REPORTS_SERVICE_HTTP_PORT=${REPORTS_SERVICE_HTTP_PORT}
  mongodb:
    container_name: magpie-monitor-mongodb
    image: mongo
    volumes:
      - db-data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 5
  mongo-express:
    container_name: magpie-monitor-mongo-express
    image: mongo-express
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_USER}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_PASSWORD}
    depends_on:
      - mongodb

volumes:
  db-data:
