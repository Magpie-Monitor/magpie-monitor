spring.application.name=Magpie Monitor

server.port=8080

spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_LOGIN}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.show-sql=false
#spring.jpa.hibernate.ddl-auto=create-drop

jwt.secret-key=${JWTSECRET}
jwt.expiration-time-seconds=1209600

spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=openid,email,profile

oauth2.google.redirect-uri=${GOOGLE_REDIRECT_URI_FOR_FRONTEND}
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth?access_type=offline
# Customize the login page URL to include access_type=offline
spring.security.oauth2.client.registration.google.authorization-uri-template=https://accounts.google.com/o/oauth2/auth?access_type=offline&response_type=code&client_id={clientId}&scope={scopes}&state={state}&redirect_uri={redirectUri}

app.base-url=http://localhost:8080/
