openapi: 3.0.3
info:
  title: Reports API
  version: v1
paths:
  /v1/reports:
    post:
      summary: Create a new report
      operationId: createReport
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/reportsPostParams"
      responses:
        "201":
          description: Report created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Report"
    get:
      summary: Get all reports
      operationId: getAllReports
      parameters:
        - name: clusterId
          in: query
          description: Id of the cluster
          schema:
            type: string
        - name: sinceNano
          in: query
          description: Filter reports starting from this date (Unix nanoseconds timestamp)
          schema:
            type: integer
            format: int64
        - name: toNano
          in: query
          description: Filter reports up to this date (Unix nanoseconds timestamp)
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: List of all reports
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Report"

  /v1/reports/{id}:
    get:
      summary: Get a single report by ID
      operationId: getSingleReport
      parameters:
        - name: id
          in: path
          required: true
          description: Report ID
          schema:
            type: string
      responses:
        "200":
          description: Report details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Report"

  /v1/reports/scheduled:
    post:
      summary: Schedule a report to be created withing 24h
      operationId: createScheduledReport
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/reportsPostParams"
      responses:
        "201":
          description: Scheduled report created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Report"
  /v1/node-incidents/{id}:
    get:
      summary: Get a single node incident by ID
      operationId: getSingleNodeIncident
      responses:
        "200":
          description: Node incident details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NodeIncident"
  /v1/application-incidents/{id}:
    get:
      summary: Get a single application incident by ID
      operationId: getSingleApplicationIncident
      responses:
        "200":
          description: Application incident details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApplicationIncident"

components:
  schemas:
    Report:
      type: object
      properties:
        id:
          type: string
          description: Report ID
        status:
          $ref: "#/components/schemas/ReportState"
        clusterId:
          type: string
          description: Id of the cluster
        SinceNano:
          type: integer
          format: int64
          description: Report start date (in nanoseconds)
        toNano:
          type: integer
          format: int64
          description: Report end date (in nanoseconds)
        requestedAtNs:
          type: integer
          format: int64
          description: When the report was requested (in nanoseconds)
        scheduledGenerationAtMs:
          type: integer
          format: int64
          description: Scheduled generation date (in milliseconds)
        title:
          type: string
        nodeReports:
          type: array
          items:
            $ref: "#/components/schemas/NodeReport"
        applicationReports:
          type: array
          items:
            $ref: "#/components/schemas/ApplicationReport"
        totalApplicationEntries:
          type: integer
        totalNodeEntries:
          type: integer
        urgency:
          $ref: "#/components/schemas/Urgency"
        scheduledApplicationInsights:
          $ref: "#/components/schemas/ScheduledApplicationInsights"
        scheduledNodeInsights:
          $ref: "#/components/schemas/ScheduledNodeInsights"

    NodeReport:
      type: object
      properties:
        node:
          type: string
        precision:
          type: string
        customPrompt:
          type: string
        incidents:
          type: array
          items:
            $ref: "#/components/schemas/NodeIncident"

    ApplicationReport:
      type: object
      properties:
        applicationName:
          type: string
        precision:
          type: string
        customPrompt:
          type: string
        incidents:
          type: array
          items:
            $ref: "#/components/schemas/ApplicationIncident"

    NodeIncident:
      type: object
      properties:
        id:
          type: string
        category:
          type: string
        clusterId:
          type: string
        nodeName:
          type: string
        summary:
          type: string
        recommendation:
          type: string
        urgency:
          $ref: "#/components/schemas/Urgency"
        sources:
          type: array
          items:
            $ref: "#/components/schemas/NodeIncidentSource"

    ApplicationIncident:
      type: object
      properties:
        id:
          type: string
        clusterId:
          type: string
        applicationName:
          type: string
        category:
          type: string
        summary:
          type: string
        recommendation:
          type: string
        urgency:
          $ref: "#/components/schemas/Urgency"
        sources:
          type: array
          items:
            $ref: "#/components/schemas/ApplicationIncidentSource"

    NodeIncidentSource:
      type: object
      properties:
        timestamp:
          type: integer
          format: int64
        content:
          type: string

    ApplicationIncidentSource:
      type: object
      properties:
        timestamp:
          type: integer
          format: int64
        podName:
          type: string
        containerName:
          type: string
        image:
          type: string
        content:
          type: string

    ScheduledApplicationInsights:
      type: object
      properties:
        id:
          type: string
        sinceNano:
          type: integer
          format: int64
        toNano:
          type: integer
          format: int64
        clusterId:
          type: string
        applicationConfiguration:
          type: array
          items:
            $ref: "#/components/schemas/ApplicationInsightConfiguration"

    ScheduledNodeInsights:
      type: object
      properties:
        id:
          type: string
        sinceNano:
          type: integer
          format: int64
        toNano:
          type: integer
          format: int64
        clusterId:
          type: string
        nodeConfiguration:
          type: array
          items:
            $ref: "#/components/schemas/NodeInsightConfiguration"

    ApplicationInsightConfiguration:
      type: object
      properties:
        applicationName:
          type: string
        precision:
          type: string
        customPrompt:
          type: string

    NodeInsightConfiguration:
      type: object
      properties:
        nodeName:
          type: string
        precision:
          type: string
        customPrompt:
          type: string

    reportsPostParams:
      type: object
      properties:
        clusterId:
          type: string
        sinceNano:
          type: integer
          format: int64
        toNano:
          type: integer
          format: int64
        applicationConfiguration:
          type: array
          items:
            $ref: "#/components/schemas/ApplicationInsightConfiguration"
        nodeConfiguration:
          type: array
          items:
            $ref: "#/components/schemas/NodeInsightConfiguration"
        maxLength:
          type: integer

    Urgency:
      type: integer
      enum: [1, 2, 3]
      description: 1 = Low, 2 = Medium, 3 = High

    ReportState:
      type: string
      enum: [failed_to_generate, awaiting_generation, generated]
      description: The current state of the report
