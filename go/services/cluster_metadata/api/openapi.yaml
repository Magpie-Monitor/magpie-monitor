openapi: 3.0.0
info:
  title: Cluster Metadata API
  version: 1.0.0
paths:
  /v1/metadata/clusters:
    get:
      summary: Get metadata for all clusters
      description: Returns metadata for all clusters, indicating whether they are currently running
      operationId: getAllClusters
      tags:
        - metadata
      responses:
        "200":
          description: Successfully fetched cluster metadata
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ClusterMetadata"
        "400":
          description: Unauthorized access
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    post:
      summary: Insert cluster metadata
      description: Inserts metadata for a cluster 
      operationId: insertClusterMetadata
      tags:
        - metadata
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                collectedAtMs:
                  type: integer
                  format: int64
                  description: Millisecond timestamp at which metadata was collected
                clusterName:
                  type: string
                  description: Name of the cluster sending metadata
                applications:
                  type: array
                  items:
                    $ref: "#/components/schemas/Application"
      responses:
        "200":
          description: Successfully inserted metadata
        "400":
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /v1/metadata/nodes:
    post:
      summary: Insert node metadata
      description: Inserts metadata for a node
      operationId: insertNodeMetadata
      tags:
        - metadata
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                collectedAtMs:
                  type: integer
                  format: int64
                  description: Millisecond timestamp at which metadata was collected
                nodeName:
                  type: string
                  description: Name of the node sending metadata
                clusterName:
                  type: string
                  description: Name of the cluster to which node sending metadata belongs to
                watchedFiles:
                  type: array
                  items:
                    type: string
      responses:
        "200":
          description: Successfully inserted metadata
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NodesMetadata"
        "400":
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /v1/metadata/clusters/{id}/applications:
    get:
      summary: Get metadata for cluster applications
      description: Returns deduplicated metadata for cluster applications, indicates which applications are running
      operationId: getClusterMetadata
      tags:
        - metadata
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Id of the cluster to which applications belong
        - in: query
          name: sinceMillis
          schema:
            type: integer
            format: int64
          description: Millisecond timestamp which indicates the start of metadata time range
        - in: query
          name: toMillis
          schema:
            type: integer
            format: int64
          description: Millisecond timestamp which indicates the end of metadata time range
      responses:
        "200":
          description: Successfully fetched application metadata
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApplicationsMetadata"
        "400":
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /v1/metadata/clusters/{id}/nodes:
    get:
      summary: Get metadata for cluster nodes
      description: Returns deduplicated metadata for cluster nodes, indicates which nodes are running
      operationId: getNodeMetadata
      tags:
        - metadata
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Id of the cluster to which node belongs
        - in: query
          name: sinceMillis
          schema:
            type: integer
            format: int64
          description: Millisecond timestamp which indicates the start of metadata time range
        - in: query
          name: toMillis
          schema:
            type: integer
            format: int64
          description: Millisecond timestamp which indicates the end of metadata time range
      responses:
        "200":
          description: Successfully fetched node metadata
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/NodeMetadata"
        "400":
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

components:
  schemas:
    ApplicationsMetadata:
      type: array
      items:
        $ref: "#/components/schemas/ApplicationMetadata"

    ApplicationMetadata:
      type: object
      properties:
        name:
          type: string
          description: Name of an application
        kind:
          type: string
          description: Kubernetes application kind, a deployment, statefulset or daemonset
        running:
          type: boolean
          description: Whether an application is currently running

    NodesMetadata:
      type: array
      items:
        $ref: "#/components/schemas/NodeMetadata"

    NodeMetadata:
      type: object
      properties:
        name:
          type: string
          description: Name of a node
        files:
          type: array
          items:
            type: string
          description: Files that are watched by the node
        running:
          type: boolean
          description: Whether the node is currently running

    ClusterMetadata:
      type: object
      properties:
        name:
          type: string
          description: Name of the cluster
        running:
          type: boolean
          description: Whether the cluster is currently running

    Application:
      type: object
      properties:
        kind:
          type: string
          description: Kubernetes application kind, a deployment, statefulset or daemonset
        name:
          type: string
          description: Name of the application

    ErrorResponse:
      type: object
      properties:
        timestampMillis:
          type: integer
          format: int64
          description: Millisecond timestamp when error occurred
        error:
          type: string
          description: Error message